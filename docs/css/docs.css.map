{"version":3,"sources":["partials/_header.scss","../../sass/modules/_variables.scss","../../bower_components/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss","partials/_nav.scss","partials/_hero.scss","partials/_module.scss","partials/_footer.scss","../../bower_components/bourbon/app/assets/stylesheets/functions/_tint.scss","../../bower_components/bourbon/app/assets/stylesheets/css3/_linear-gradient.scss","../../sass/modules/_mixins.scss","../../bower_components/bourbon/app/assets/stylesheets/addons/_font-stacks.scss","partials/_media.scss","docs.scss"],"names":[],"mappings":"AAAA,QACI,mBCgCyB,AD7BzB,kBAA8B,CAJzB,AAOT,OACI,WAAY,AACZ,iBAA0B,CAFtB,AAKR,SACI,gBEAa,AFCb,sBCN8B,CDIxB,AGZV,KACI,WAAa,CADX,AAIN,UACI,cAAe,AACf,WAAY,AACZ,kBDMa,CCTN,AAKN,qBACG,cAAgB,CADN,ACTlB,MACI,kBAAmB,AACnB,cAAkB,CAFf,AAKP,SACI,gBFOa,AENb,WAAa,CAFP,AAIN,WACI,eAAiB,CADlB,AAKP,WACI,oBHRoC,CGO5B,AAIZ,UACI,gBFNa,AEOb,mBHboC,AGcpC,kBFRa,CEKN,AAMX,aACI,mBHQyB,AGPzB,YFba,AEcb,iBHnB8B,AGoB9B,qBAAuB,CAJb,ACxBd,aACI,mBJ+BiB,AI9BjB,cJ+ByB,AI9BzB,SAAU,AACV,qBJGoC,CIP1B,AAOd,aACI,mBJyByB,AIvBzB,cJHoC,CIA1B,AAMd,yBAJI,oBJFoC,CIM3B,AAGR,uBACG,eAAiB,CADP,AAKlB,gBACI,uBJiBsB,AIhBtB,cJhBoC,CIcvB,AAKjB,aACI,iBJpBoC,CImB1B,AAKV,oFACI,kBHnBS,CGkBP,AAIL,sGACG,QAAU,CADA,AAKL,eACT,SAAU,AACV,sBJHsB,CICR,ACxClB,QACI,mBL+BiB,AK9BjB,gBLS4B,AKR5B,cAAkB,CAHb,AAMS,gDACN,aCeC,CDhBa,AAM1B,WACI,UAAY,CADJ,AAIZ,QEkBE,6BChC8C,ADiC9C,qHAAyC,AACzC,kHAAyB,AChCvB,qBAAsB,AHetB,aLcyB,CKjBpB,AGVK,4BACN,eAAiB,CADH,AHgBtB,QACI,aAAe,CADV,AAIT,oBACI,gBAAiB,AACjB,cLKyB,AKJzB,gBJhBa,AIiBb,oEIlBoE,AJmBpE,kBLxBoC,CKmBnB,AK1BrB,2CAGQ,iDACI,gBVG4B,CUJtB,CAAA,ACQlB,KACI,kBAAoB,CADlB,AAIN,MACI,+CAAuB,CADpB","file":"docs.css","sourcesContent":[".header {\n    background: $base-colour-inverse;\n\n    // 22.5px (45px), leaving 45px for content (total = 90px)\n    padding: ($kl-i-1-2 / 2 * 3) 0;\n}\n\n.brand {\n    float: left;\n    padding: ($kl-i-1-2 / 2) 0;\n}\n\n.btn-cta {\n    font-size: rem(16);\n    padding: rem(10.5) $kl-i-1-2;\n}","$base-content-width: 37.5rem; // 750px\n$root-font-size: 20px; // in px\n$em-base: $root-font-size;\n$base-font-size: 1rem; // 20px\n$base-line-height: 1.5;\n\n// Keyline increments are used for establishing vertical rhythm\n$base-keyline-increment: $base-font-size * $base-line-height;\n$kl-i-1-2: $base-keyline-increment / 2;\n$kl-i-1: $base-keyline-increment;\n$kl-i-3-2: $kl-i-1-2 * 3;\n$kl-i-2: $base-keyline-increment * 2;\n\n// Create a modular scale using $base-font-size and $base-width\n$modular-scale-ratio: $golden;\n$modular-scale-base-1: $base-font-size;\n$modular-scale-base-2: $base-content-width;\n\n// Font sizes for headings\n$h1-font-size: modular-scale(4, $modular-scale-base-1 $modular-scale-base-2);\n$h2-font-size: modular-scale(3, $modular-scale-base-1 $modular-scale-base-2);\n$h3-font-size: modular-scale(2, $modular-scale-base-1 $modular-scale-base-2);\n$h4-font-size: modular-scale(1, $modular-scale-base-1 $modular-scale-base-2);\n$h5-font-size: modular-scale(0, $modular-scale-base-1 $modular-scale-base-2);\n$h6-font-size: modular-scale(-2, $modular-scale-base-1 $modular-scale-base-2);\n\n// Fonts\n$serif: \"Lora\", $georgia;\n$sans-serif: \"Nunito\", $helvetica;\n$monospace: \"Source Code Pro\", $monospace;\n\n// Palette\n$base-colour: #454553;\n$base-colour-inverse: #FEFEFE;\n$primary-colour: #EB586F;\n$secondary-colour: #4AA0D5;\n$base-font-colour: $base-colour;\n\n$grey-light-colour: #CCC; // Thin lines\n$grey-lighter-colour: #EEE; // Thick lines, and highlights","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n",".nav {\n    float: right;\n}\n\n.nav-item {\n    display: block;\n    float: left;\n    margin-right: rem(12);\n\n    &:last-child {\n        margin-right: 0;\n    }\n}",".hero {\n    text-align: center;\n    padding: $kl-i-2 0;\n}\n\n.license {\n    font-size: rem(10);\n    top: -1.5rem;\n\n    a {\n        background: none; // Remove underline\n    }\n}\n\n.utilities {\n    margin-bottom: $kl-i-1;\n}\n\n.btn-grid {\n    font-size: rem(16);\n    line-height: $kl-i-1;\n    margin-right: rem(10);\n}\n\n.form-select {\n    background: $base-colour-inverse;\n    height: rem(60); // Force height\n    padding: 0 $kl-i-1-2;\n    vertical-align: middle;\n}",".module-head {\n    background: $base-colour;\n    color: $base-colour-inverse;\n    margin: 0;\n    padding: $kl-i-1-2 $kl-i-1;\n}\n\n.module-body {\n    background: $base-colour-inverse;\n    margin-bottom: $kl-i-1;\n    padding: $kl-i-1;\n}\n\n.module-sub {\n    margin-bottom: $kl-i-1;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.module-example {\n    outline: 3px solid $grey-lighter-colour;\n    padding: $kl-i-1;\n}\n\n.module-code {\n    margin-top: $kl-i-1;\n}\n\n.example-default-button, .example-ghost-button, .example-button-styles {\n    .btn {\n        margin-right: rem(10);\n    }\n\n    &:last-child {\n        margin: 0;\n    }\n}\n\n.highlight > pre {\n    border: 0;\n    outline: 3px solid $grey-lighter-colour;\n}",".footer {\n    background: $base-colour;\n    margin-top: $kl-i-2;\n    padding: $kl-i-2 0;\n\n    .nav-item {\n        &:hover, &:focus {\n            color: tint($primary-colour, 15%);\n        }\n    }\n}\n\n.copyright {\n    float: left;\n}\n\n.author {\n    @include underline($color: $base-colour-inverse);\n\n    color: $base-colour-inverse;\n}\n\n.hearts {\n    color: #EB586F;\n}\n\n.nav-item-affiliate {\n    background: none; // Remove underline\n    color: $base-colour-inverse;\n    font-size: rem(16);\n    font-family: $sans-serif;\n    line-height: $kl-i-1;\n}","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","// 1. Medium-style underlines\n@mixin underline($color: $primary-colour, $weight: 1px, $offset: 1px) {\n    @include linear-gradient(to top, transparent, transparent $offset, $color $offset, $color ($offset + $weight), transparent ($offset + $weight));\n\n    text-decoration: none;\n\n    &:hover, &:focus {\n        background: none;\n    }\n}\n\n\n// 2. Buttons\n@mixin btn-size($fs: $base-font-size, $lh: $base-line-height, $py: $kl-i-1-2, $px: $kl-i-1) {\n    font-size: $fs;\n    line-height: $lh;\n    padding: $py $px;\n}\n\n@mixin btn-style($fc: $base-colour-inverse, $bg: $primary-colour) {\n    @include transition(all 0.2s cubic-bezier(0.4, 0, 0.2, 1));\n\n    background: $bg;\n    color: $fc;\n\n    &:hover, &:focus, &:active {\n        background: tint($bg, 10%);\n        color: $fc;\n        outline: 3px solid tint($bg, 50%);\n    }\n}\n\n@mixin btn-style-ghost($fc: $primary-colour, $bc: $primary-colour) {\n    @include transition(all 0.2s cubic-bezier(0.4, 0, 0.2, 1));\n\n    color: $fc;\n    // We are using outline instead of border as it will not increase the height\n    outline: 1px solid $bc;\n\n    &:hover, &:focus, &:active {\n        color: tint($bc, 10%);\n        outline: 3px solid tint($bc, 50%);\n    }\n}","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","@media only screen and (max-width: $base-content-width) {\n    // TODO: Improve mobile support\n    .header, .hero, .footer {\n        .wrapper {\n            padding: 0 $kl-i-1;\n        }\n    }\n}","@import \"bourbon\";\n@import \"modules/variables\";\n@import \"modules/mixins\";\n\n@import \"partials/header\";\n@import \"partials/nav\";\n@import \"partials/hero\";\n@import \"partials/module\";\n@import \"partials/footer\";\n@import \"partials/media\";\n\nbody {\n    background: #F0E9FF;\n}\n\n.grid {\n    background: #F0E9FF url(http://basehold.it/i/30);\n}"],"sourceRoot":"/source/"}
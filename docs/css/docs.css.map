{"version":3,"sources":["partials/_foit.scss","../../bower_components/bourbon/app/assets/stylesheets/addons/_font-stacks.scss","partials/_header.scss","../../sass/modules/_variables.scss","partials/_nav.scss","../../bower_components/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss","partials/_hero.scss","partials/_module.scss","partials/_footer.scss","../../bower_components/bourbon/app/assets/stylesheets/functions/_tint.scss","docs.scss","../../bower_components/bourbon/app/assets/stylesheets/addons/_prefixer.scss","partials/_media.scss"],"names":[],"mappings":"AAQA,KACI,uDCH6D,CDIhE,oCAGG,4DCDoE,CDEvE,gBAIO,4DCZyD,CDUjE,4HAMQ,mECVgE,CDWnE,QEtBD,mBAGA,kBAA8B,CACjC,OAGG,WACA,iBAA0B,CAC7B,SAGG,gBACA,sBCN8B,CDOjC,KEdG,WAAa,CAChB,UAGG,cACA,WACA,kBCMa,CDTjB,qBAMQ,cAAgB,CACnB,MEVD,kBACA,cAAkB,CACrB,SAGG,gBACA,WAAa,CAFjB,WAKQ,eAAiB,CACpB,WAID,oBHRoC,CGSvC,UAGG,gBACA,mBACA,kBDRa,CCShB,aAGG,mBAEA,gBACA,YACA,iBACA,qBAAuB,CAC1B,aC9BG,mBACA,cACA,SACA,qBJGoC,CIFvC,aAGG,mBACA,AACA,cJHoC,CIIvC,yBAFG,oBACA,CAGJ,uBAIQ,eAAiB,CACpB,gBAID,uBACA,cJhBoC,CIiBvC,aAGG,iBJpBoC,CIqBvC,oFAIO,kBFnBS,CEiBjB,sGAMQ,QAAU,CACb,eAID,SACA,sBJCsB,CIAzB,QC1CG,mBACA,gBACA,cAAkB,CAHtB,gDAOY,aCeC,CDdJ,WAKL,UAAY,CACf,QETG,gBACA,qBACA,kBFWA,aLgByB,CKlB7B,oBGmBQ,6CAIA,AAYA,qCDxCA,SAAW,CACd,cCuBG,mDAIA,AAYA,2CDnCA,mBACA,WACA,WACA,WACA,OACA,kBACA,UAAY,CACf,QFDD,aAAe,CAClB,oBAGG,gBACA,cACA,gBACA,oEACA,kBLvBoC,CKwBvC,2CI7BG,iDAEQ,gBTG4B,CSF/B,CF6BT,KACI,kBAAoB,CACvB,MAGG,+CAAgD,CACnD,YAnCG,gBACA,qBACA,iBAAmB,CAmCvB,wBCPQ,6CAIA,AAYA,qCDxCA,SAAW,CACd,kBCuBG,mDAIA,AAYA,2CDnCA,mBACA,WACA,WACA,WACA,OACA,kBACA,UAAY,CACf","file":"docs.css","sourcesContent":["// wf-sourcecodepro-n4-active\n// wf-nunito-n3-active wf-nunito-n4-active wf-nunito-n7-active\n// wf-lora-n4-active wf-lora-i4-active wf-lora-n7-active wf-lora-i7-active\n// wf-active\n\n$serif-objs: \"body\";\n$sans-serif-objs: \"h1, h2, h3, h4, h5, h6, .btn, .form-select\";\n\n#{$serif-objs} {\n    font-family: $georgia;\n}\n\n#{$sans-serif-objs} {\n    font-family: $helvetica;\n}\n\n.wf-active {\n    #{$serif-objs} {\n        font-family: $serif;\n    }\n\n    #{$sans-serif-objs} {\n        font-family: $sans-serif;\n    }\n}","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n",".header {\n    background: $base-colour-inverse;\n\n    // 22.5px (45px), leaving 45px for content (total = 90px)\n    padding: ($kl-i-1-2 / 2 * 3) 0;\n}\n\n.brand {\n    float: left;\n    padding: ($kl-i-1-2 / 2) 0;\n}\n\n.btn-cta {\n    font-size: rem(16);\n    padding: rem(10.5) $kl-i-1-2;\n}","$base-content-width: 37.5rem !default; // 750px\n$root-font-size: 20px !default; // in px\n$em-base: $root-font-size;\n$base-font-size: 1rem !default; // 20px\n$base-line-height: 1.5 !default;\n\n// Keyline increments are used for establishing vertical rhythm\n$base-keyline-increment: $base-font-size * $base-line-height;\n$kl-i-1-2: $base-keyline-increment / 2;\n$kl-i-1: $base-keyline-increment;\n$kl-i-3-2: $kl-i-1-2 * 3;\n$kl-i-2: $base-keyline-increment * 2;\n\n// Create a modular scale using $base-font-size and $base-width\n$civil-ms-ratio: $golden !default;\n$modular-scale-ratio: $civil-ms-ratio;\n$modular-scale-base-1: $base-font-size !default;\n$modular-scale-base-2: $base-content-width !default;\n\n// Font sizes for headings\n$h1-font-size: modular-scale(4, $modular-scale-base-1 $modular-scale-base-2) !default;\n$h2-font-size: modular-scale(3, $modular-scale-base-1 $modular-scale-base-2) !default;\n$h3-font-size: modular-scale(2, $modular-scale-base-1 $modular-scale-base-2) !default;\n$h4-font-size: modular-scale(1, $modular-scale-base-1 $modular-scale-base-2) !default;\n$h5-font-size: modular-scale(0, $modular-scale-base-1 $modular-scale-base-2) !default;\n$h6-font-size: modular-scale(-2, $modular-scale-base-1 $modular-scale-base-2) !default;\n\n// Fonts\n$serif: \"Lora\", $georgia !default;\n$sans-serif: \"Nunito\", $helvetica !default;\n$monospace: \"Source Code Pro\", $monospace !default;\n\n// Palette\n$base-colour: #454553 !default;\n$base-colour-inverse: #FEFEFE !default;\n$primary-colour: #EB586F !default;\n$secondary-colour: #4AA0D5 !default;\n$base-font-colour: $base-colour !default;\n\n// Thin lines\n$grey-light-colour: #CCC !default;\n\n// Thick lines, and highlights\n$grey-lighter-colour: #EEE !default;",".nav {\n    float: right;\n}\n\n.nav-item {\n    display: block;\n    float: left;\n    margin-right: rem(12);\n\n    &:last-child {\n        margin-right: 0;\n    }\n}","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n",".hero {\n    text-align: center;\n    padding: $kl-i-2 0;\n}\n\n.license {\n    font-size: rem(10);\n    top: -1.5rem;\n\n    a {\n        background: none; // Remove underline\n    }\n}\n\n.utilities {\n    margin-bottom: $kl-i-1;\n}\n\n.btn-grid {\n    font-size: rem(16);\n    line-height: $kl-i-1;\n    margin-right: rem(10);\n}\n\n.form-select {\n    background: $base-colour-inverse;\n    //font-family: $sans-serif;\n    font-size: rem(16);\n    height: rem(60); // Force height\n    padding: 0 $kl-i-1-2;\n    vertical-align: middle;\n}",".module-head {\n    background: $base-colour;\n    color: $base-colour-inverse;\n    margin: 0;\n    padding: $kl-i-1-2 $kl-i-1;\n}\n\n.module-body {\n    background: $base-colour-inverse;\n    margin-bottom: $kl-i-1;\n    padding: $kl-i-1;\n}\n\n.module-sub {\n    margin-bottom: $kl-i-1;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.module-example {\n    outline: 3px solid $grey-lighter-colour;\n    padding: $kl-i-1;\n}\n\n.module-code {\n    margin-top: $kl-i-1;\n}\n\n.example-default-button, .example-ghost-button, .example-button-styles {\n    .btn {\n        margin-right: rem(10);\n    }\n\n    &:last-child {\n        margin: 0;\n    }\n}\n\n.highlight > pre {\n    border: 0;\n    outline: 3px solid $grey-lighter-colour;\n}",".footer {\n    background: $base-colour;\n    margin-top: $kl-i-2;\n    padding: $kl-i-2 0;\n\n    .nav-item {\n        &:hover, &:focus {\n            color: tint($primary-colour, 15%);\n        }\n    }\n}\n\n.copyright {\n    float: left;\n}\n\n.author {\n    @include magic-link($base-colour-inverse);\n    color: $base-colour-inverse;\n}\n\n.hearts {\n    color: #EB586F;\n}\n\n.nav-item-affiliate {\n    background: none; // Remove underline\n    color: $base-colour-inverse;\n    font-size: rem(16);\n    font-family: $sans-serif;\n    line-height: $kl-i-1;\n}","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","@import \"bourbon\";\n@import \"modules/variables\";\n@import \"modules/mixins\";\n\n@mixin magic-link($c: $primary-colour) {\n    background: none;\n    display: inline-block;\n    position: relative;\n\n    &:hover:after {\n        @include transform(translateY(5px) scale(1.1));\n        opacity: 0;\n    }\n\n    &:after {\n        @include transition(all 0.3s cubic-bezier(0.4, 0, 0.2, 1));\n        background: $c;\n        bottom: 1px;\n        content: \"\";\n        height: 1px;\n        left: 0;\n        position: absolute;\n        width: 100%;\n    }\n}\n\n@import \"partials/foit\";\n@import \"partials/header\";\n@import \"partials/nav\";\n@import \"partials/hero\";\n@import \"partials/module\";\n@import \"partials/footer\";\n@import \"partials/media\";\n\nbody {\n    background: #F0E9FF;\n}\n\n.grid {\n    background: #F0E9FF url(http://basehold.it/i/30);\n}\n\n.magic-link {\n    @include magic-link;\n}","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@media only screen and (max-width: $base-content-width) {\n    // TODO: Improve mobile support\n    .header, .hero, .footer {\n        .wrapper {\n            padding: 0 $kl-i-1;\n        }\n    }\n}"],"sourceRoot":"/source/"}